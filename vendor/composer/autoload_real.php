<?php

// autoload_real.php @generated by Composer

<<<<<<< HEAD
class ComposerAutoloaderInit4c3cbd1f4c63042fd188c6e310b7f9ee
=======
class ComposerAutoloaderInit59c8221b4c925e33a3231bb7aed76019
>>>>>>> a6669da02ee6aa6ee8bb2c8df1c1e27296283790
{
    private static $loader;

    public static function loadClassLoader($class)
    {
        if ('Composer\Autoload\ClassLoader' === $class) {
            require __DIR__ . '/ClassLoader.php';
        }
    }

    public static function getLoader()
    {
        if (null !== self::$loader) {
            return self::$loader;
        }

<<<<<<< HEAD
        spl_autoload_register(array('ComposerAutoloaderInit4c3cbd1f4c63042fd188c6e310b7f9ee', 'loadClassLoader'), true, true);
        self::$loader = $loader = new \Composer\Autoload\ClassLoader();
        spl_autoload_unregister(array('ComposerAutoloaderInit4c3cbd1f4c63042fd188c6e310b7f9ee', 'loadClassLoader'));
=======
        spl_autoload_register(array('ComposerAutoloaderInit59c8221b4c925e33a3231bb7aed76019', 'loadClassLoader'), true, true);
        self::$loader = $loader = new \Composer\Autoload\ClassLoader();
        spl_autoload_unregister(array('ComposerAutoloaderInit59c8221b4c925e33a3231bb7aed76019', 'loadClassLoader'));
>>>>>>> a6669da02ee6aa6ee8bb2c8df1c1e27296283790

        $useStaticLoader = PHP_VERSION_ID >= 50600 && !defined('HHVM_VERSION') && (!function_exists('zend_loader_file_encoded') || !zend_loader_file_encoded());
        if ($useStaticLoader) {
            require_once __DIR__ . '/autoload_static.php';

<<<<<<< HEAD
            call_user_func(\Composer\Autoload\ComposerStaticInit4c3cbd1f4c63042fd188c6e310b7f9ee::getInitializer($loader));
=======
            call_user_func(\Composer\Autoload\ComposerStaticInit59c8221b4c925e33a3231bb7aed76019::getInitializer($loader));
>>>>>>> a6669da02ee6aa6ee8bb2c8df1c1e27296283790
        } else {
            $map = require __DIR__ . '/autoload_namespaces.php';
            foreach ($map as $namespace => $path) {
                $loader->set($namespace, $path);
            }

            $map = require __DIR__ . '/autoload_psr4.php';
            foreach ($map as $namespace => $path) {
                $loader->setPsr4($namespace, $path);
            }

            $classMap = require __DIR__ . '/autoload_classmap.php';
            if ($classMap) {
                $loader->addClassMap($classMap);
            }
        }

        $loader->register(true);

        if ($useStaticLoader) {
<<<<<<< HEAD
            $includeFiles = Composer\Autoload\ComposerStaticInit4c3cbd1f4c63042fd188c6e310b7f9ee::$files;
=======
            $includeFiles = Composer\Autoload\ComposerStaticInit59c8221b4c925e33a3231bb7aed76019::$files;
>>>>>>> a6669da02ee6aa6ee8bb2c8df1c1e27296283790
        } else {
            $includeFiles = require __DIR__ . '/autoload_files.php';
        }
        foreach ($includeFiles as $fileIdentifier => $file) {
<<<<<<< HEAD
            composerRequire4c3cbd1f4c63042fd188c6e310b7f9ee($fileIdentifier, $file);
=======
            composerRequire59c8221b4c925e33a3231bb7aed76019($fileIdentifier, $file);
>>>>>>> a6669da02ee6aa6ee8bb2c8df1c1e27296283790
        }

        return $loader;
    }
}

<<<<<<< HEAD
function composerRequire4c3cbd1f4c63042fd188c6e310b7f9ee($fileIdentifier, $file)
=======
function composerRequire59c8221b4c925e33a3231bb7aed76019($fileIdentifier, $file)
>>>>>>> a6669da02ee6aa6ee8bb2c8df1c1e27296283790
{
    if (empty($GLOBALS['__composer_autoload_files'][$fileIdentifier])) {
        require $file;

        $GLOBALS['__composer_autoload_files'][$fileIdentifier] = true;
    }
}
